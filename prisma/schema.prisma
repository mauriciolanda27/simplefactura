// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  password_hash String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  
  // Relations
  categories   Category[]
  invoices     Invoice[]
  auditLogs    AuditLog[]
  settings     UserSettings?
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  invoices    Invoice[]
}

model Invoice {
  id                 String   @id @default(cuid())
  authorization_code String
  name               String
  nit                String
  nit_ci_cex         String
  number_receipt     String
  purchase_date      DateTime
  total_amount       Float
  vendor             String
  rubro              String
  categoryId         String
  category           Category @relation(fields: [categoryId], references: [id])
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  user               User     @relation(fields: [userId], references: [id])
  userId             String
}

model AuditLog {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  action      String   // CREATE, UPDATE, DELETE
  table_name  String
  record_id   String
  old_values  Json?
  new_values  Json?
  ip_address  String?
  created_at  DateTime @default(now())
}

model UserSettings {
  id              String   @id @default(cuid())
  userId          String   @unique
  user            User     @relation(fields: [userId], references: [id])
  theme           String   @default("light")
  language        String   @default("es")
  notifications   Boolean  @default(true)
  export_format   String   @default("csv")
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}
